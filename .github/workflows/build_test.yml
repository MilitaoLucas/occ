name: Build & Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CPM_SOURCE_CACHE: ${{github.workspace}}/cache/cpm
  OCC_BASIS_PATH: ${{github.workspace}}

jobs:
  build:
    strategy:
      matrix:
        include: 
          - os: macos-latest
            architecture: arm64;x86_64
            script: macos_generic_build.sh
          - os: ubuntu-latest
            architecture: x86_64
            script: linux_generic_build.sh
          - os: ubuntu-latest
            architecture: x86_64
            script: dockcross-windows.sh

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Install Dependencies Linux
      if: startsWith(runner.os, 'Linux')
      run: |
        sudo apt update
        sudo apt install -y python3-numpy libpthread-stubs0-dev doxygen graphviz ninja-build

    - name: Install Dependencies Mac
      if: startsWith(runner.os, 'macOS')
      run: |
        brew install ninja doxygen graphviz
        sudo softwareupdate --install-rosetta --agree-to-license


    - name: Cache CPM Dependencies
      uses: actions/cache@v3
      with:
        path: |
          ${{env.CPM_SOURCE_CACHE}}
          ${{github.workspace}}/build
        key: ${{ runner.os }}-occ-build-cache

    - name: Run build script
      run: |
        ./scripts/${{matrix.script}} ${{matrix.architecture}}
    
#   - name: Test
#     working-directory: ${{github.workspace}}/build
#     # Execute tests defined by the CMake configuration.  
#     # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#     run: ctest -C ${{env.BUILD_TYPE}}
#     
#   - name: Build Documentation
#     run: cmake --build ${{github.workspace}}/build --target docs

#   - name: Deploy Documentation
#     uses: peaceiris/actions-gh-pages@v3
#     with:
#       github_token: ${{ secrets.GITHUB_TOKEN }}
#       publish_dir: ${{github.workspace}}/build/docs/html

#   - name: Package
#     run: cpack -G TXZ --config ${{github.workspace}}/build/CPackConfig.cmake

    - name: Upload binaries
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: ${{github.workspace}}/build/*.xz
